plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.18'
	id 'io.spring.dependency-management' version '1.1.4'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	/* swagger */
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.15'
	implementation 'com.google.code.gson:gson:2.8.7'

	/* s3 */
	implementation("com.amazonaws:aws-java-sdk-s3:1.12.174")

	/* firebase */
	implementation 'com.google.firebase:firebase-admin:9.2.0'

	/* jwt,security */
	implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
	implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'
	implementation 'org.springframework.boot:spring-boot-starter-security'

	/* feign client */
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:3.1.7'

	/* google */
	implementation 'com.google.api-client:google-api-client:1.32.1'
	implementation 'com.fasterxml.jackson.core:jackson-core:2.13.0'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.0'

	/* json */
	implementation 'org.json:json:20210307'

	/* queryDSL */
	implementation "com.querydsl:querydsl-jpa:5.0.0"
	implementation "com.querydsl:querydsl-apt:5.0.0"

	/* database */
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client:2.7.4'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}

sourceSets {
	main.java.srcDir querydslDir
}

configurations {
	querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}
